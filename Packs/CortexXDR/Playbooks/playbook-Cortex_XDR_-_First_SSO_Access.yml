id: Cortex XDR - First SSO Access
version: -1
name: Cortex XDR - First SSO Access
description: |-
  Deprecated. Use `Cortex XDR - Identity Analytics` instead.
  Investigates a Cortex XDR incident containing First SSO access from ASN in organization
   or First successful SSO connection from a country in organization.

  The playbook executes the following:
  - IP and User Enrichment.
  - User Investigation - Using 'User Investigation - Generic' sub-playbook.
  - Set alert's verdict - Using 'Cortex XDR - First SSO access - Set Verdict' sub-playbook.
  - Response based on the verdict.

  The playbook is used as a sub-playbook in ‘Cortex XDR Incident Handling - v3’.
deprecated: true
starttaskid: "0"
tasks:
  "157":
    id: "157"
    taskid: ca43b3d2-ac73-444f-85e7-6233c9c1b221
    type: playbook
    task:
      id: ca43b3d2-ac73-444f-85e7-6233c9c1b221
      version: -1
      name: Cortex XDR - First SSO Access - Set Verdict
      description: |-
        This playbook determines the alert’s verdict based on the results of multiple checks.
        By default, if at least two of the checks' results are true, the verdict is set to malicious.
        else if only one check's results are true, the verdict is set to suspicious.
        If none of the conditions is true, the verdict is set to non-malicious.
        It is possible to change the threshold value of the inputs to change the sensitivity of the verdict.
      playbookName: Cortex XDR - First SSO Access - Set Verdict
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "177"
    scriptarguments:
      AlertName:
        complex:
          root: inputs.AlertName
      FailedlogonFromASNThreshold:
        complex:
          root: inputs.FailedlogonFromASNThreshold
      FailedlogonUserThreshold:
        complex:
          root: inputs.FailedlogonUserThreshold
      MaliciousVerdictThreshold:
        complex:
          root: inputs.MaliciousVerdictThreshold
      NumOfFailedLogon:
        complex:
          root: NumOfFailedLogon
      NumOfFailedLogonASN:
        complex:
          root: NumOfFailedLogonASN
      NumOfOktaSuspiciousActivities:
        complex:
          root: NumOfOktaSuspiciousActivities
      NumOfOktaSuspiciousUserAgent:
        complex:
          root: NumOfOktaSuspiciousUserAgent
      NumOfXDRAlerts:
        complex:
          root: ArraySize
      PermanentCountry:
        complex:
          root: PermanentCountry
      RelatedCampaign:
        complex:
          root: RelatedCampaign
      SuspiciousVerdictThreshold:
        complex:
          root: inputs.SuspiciousVerdictThreshold
      XDRRelatedAlertsThreshold:
        complex:
          root: inputs.XDRRelatedAlertsThreshold
      XDRRiskyHost:
        complex:
          root: PaloAltoNetworksXDR.RiskyHost
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.RiskyHost.risk_level
                iscontext: true
              right:
                value:
                  simple: MED
              ignorecase: true
            - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.RiskyHost.risk_level
                iscontext: true
              right:
                value:
                  simple: HIGH
              ignorecase: true
          accessor: |
            id
          transformers:
          - operator: uniq
      XDRRiskyUser:
        complex:
          root: PaloAltoNetworksXDR.RiskyUser
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.RiskyUser.risk_level
                iscontext: true
              right:
                value:
                  simple: MED
              ignorecase: true
            - operator: isEqualString
              left:
                value:
                  simple: PaloAltoNetworksXDR.RiskyUser.risk_level
                iscontext: true
              right:
                value:
                  simple: HIGH
              ignorecase: true
          accessor: id
          transformers:
          - operator: uniq
    separatecontext: false
    continueonerrortype: ""
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 337.5,
          "y": 1050
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 2
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "111_112_yes": 0.4,
      "111_115_#default#": 0.11,
      "116_117_#default#": 0.64,
      "116_120_yes": 0.56,
      "158_150_yes": 0.54,
      "158_6_#default#": 0.35,
      "160_143_yes": 0.56,
      "160_79_#default#": 0.54,
      "177_175_yes": 0.37,
      "177_176_#default#": 0.16,
      "178_179_#default#": 0.32,
      "178_72_yes": 0.32,
      "180_145_#default#": 0.51,
      "180_187_yes": 0.37,
      "181_180_yes": 0.44,
      "88_100_yes": 0.46,
      "88_176_#default#": 0.25
    },
    "paper": {
      "dimensions": {
        "height": 5455,
        "width": 1720,
        "x": -420,
        "y": -1800
      }
    }
  }
inputs:
- key: AutomaticallyIsolateEndpoint
  value:
    simple: "False"
  required: false
  description: Whether to isolate the endpoint automatically.
  playbookInputQuery:
- key: XDRRelatedAlertsThreshold
  value:
    simple: "3"
  required: false
  description: |2-

    This is the minimum threshold for XDR related alerts based on user activity to identify suspicious activity.
    example: If this input is set to '3', and the 'Cortex XDR - First SSO Access - Set Verdict' sub-playbook has found 4 XDR related alerts - It will classify this check as suspicious activity.
    The default value is '3'.
  playbookInputQuery:
- key: FailedlogonUserThreshold
  value:
    simple: "30"
  required: false
  description: |-
    This is the minimum threshold for failed login attempts by the user.
    example: If this input is set to '30', and the 'Cortex XDR - First SSO Access - Set Verdict' sub-playbook has found 31 failed login attempts - It will classify this check as suspicious activity.
    The default value is '30'.
  playbookInputQuery:
- key: FailedlogonFromASNThreshold
  value:
    simple: "20"
  required: false
  description: |-
    This is the minimum threshold for failed login attempts from ASN.
    example: If this input is set to '20', and the 'Cortex XDR - First SSO Access - Set Verdict' sub-playbook has found 21 failed login attempts from ASN - It will classify this check as suspicious activity.
    The default value is '20'.
  playbookInputQuery:
- key: EndpointID
  value: {}
  required: false
  description: XDR Endpoint ID.
  playbookInputQuery:
- key: Username
  value: {}
  required: false
  description: User name.
  playbookInputQuery:
- key: IPAddress
  value: {}
  required: false
  description: IP Address from the XDR Alert.
  playbookInputQuery:
- key: LoginCountry
  value: {}
  required: false
  description: The country from which the user logged in.
  playbookInputQuery:
- key: AutomaticallyBlockAccount
  value:
    simple: "False"
  required: false
  description: Whether to block the account automatically.
  playbookInputQuery:
- key: ContactUserManager
  value:
    simple: "False"
  required: false
  description: Whether to ask the user manager for the legitimacy of the login events, in case of a user logged in from an unusual country.
  playbookInputQuery:
- key: AlertName
  value: {}
  required: false
  description: Alert Name.
  playbookInputQuery:
- key: MaliciousVerdictThreshold
  value:
    simple: "2"
  required: false
  description: |-
    The 'Malicious verdict' threshold to determine a malicious verdict.
    The default value is '2'.
    Should be Greater than the "SuspiciousVerdictThreshold" input.
  playbookInputQuery:
- key: SuspiciousVerdictThreshold
  value:
    simple: "1"
  required: false
  description: |-
    The 'Suspicious verdict' threshold to determine a suspicious verdict.
    The default value is '1'.
    Should be lower than the "MaliciousVerdictThreshold" input.
  playbookInputQuery:
- key: SplunkIndex
  value:
    simple: '*'
  required: false
  description: Splunk's index name in which to search. Default is "*" - All.
  playbookInputQuery:
- key: SplunkEarliestTime
  value:
    simple: -1d
  required: false
  description: The earliest time for the Splunk search query.
  playbookInputQuery:
- key: SplunkLatestTime
  value:
    simple: now
  required: false
  description: The latest time for the Splunk search query.
  playbookInputQuery:
- key: QRadarSearchTime
  value:
    simple: Last 1 days
  required: false
  description: 'The Search Time for the QRadar search query. for example:  Last 1 days'
  playbookInputQuery:
- key: AzureSearchTime
  value:
    simple: ago(1d)
  required: false
  description: 'The Search Time for the Azure Log Analytics search query. for example: ago(1d)'
  playbookInputQuery:
- key: SIEMFailedLogonSearch
  value:
    simple: "True"
  required: false
  description: Whether to search for failed logon logs from Siem? Can be False or True.
  playbookInputQuery:
- key: ThreatLogSearch
  value:
    simple: "True"
  required: false
  description: Whether to search for threat logs from PAN-OS? Can be False or True.
  playbookInputQuery:
- key: XDRAlertSearch
  value:
    simple: "True"
  required: false
  description: Whether to search for Related alerts from XDR? Can be False or True.
  playbookInputQuery:
- key: OktaSearch
  value:
    simple: "True"
  required: false
  description: Whether to search for logs from Okta? Can be False or True.
  playbookInputQuery:
- key: XDRUsernameField
  value:
    simple: actor_effective_username
  required: false
  description: Cortex XDR User name Field.
  playbookInputQuery:
- key: AutomaticallyClearSessions
  value:
    simple: "False"
  required: false
  description: Whether to clear all the user sessions automatically. Can be used in conjunction with the ForceClearSessionsForHighRiskUsers input.
  playbookInputQuery:
- key: ForceClearSessionsForHighRiskUsers
  value:
    simple: "False"
  required: false
  description: |-
    Whether to clear user sessions regardless of the AutomaticallyClearSessions input for users with High risk.
    Users receive their risk level based on Cortex XDR's ITDR module. The risks can be:
    - LOW
    - MED
    - HIGH

    Setting this to True will automatically clear the user sessions in Okta if the user has a high risk. Setting this and the AutomaticallyClearSessions inputs to False, will prompt the analyst to take action manually even if the user has a high risk associated with it.
  playbookInputQuery:
outputs: []
tests:
- no tests
fromversion: 6.8.0
contentitemexportablefields:
  contentitemfields: {}
system: true
marketplaces:
- xsoar
