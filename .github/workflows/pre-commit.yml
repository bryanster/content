name: pre-commit
on: pull_request

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
    - name: Install poetry
      run: pipx install poetry

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    
    - name: Install dependencies
      run: poetry install

    - name: Cache Pre commit
      id: cache-pre-commit
      uses: actions/cache@v3
      if: always()
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit

    - name: run pre-commit
      run: poetry run demisto-sdk pre-commit -g --unit-test --validate --sdk-ref 922002d50c3829b958d87e3fa62c001329ce4716 -v
    - name: check-content-files
      run: ls -la
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        check_name: Unit Test Report
        report_paths: |
            **/Packs/**/Integrations/**/.report_pytest.xml
        github_token: ${{ secrets.GITHUB_TOKEN }}
        detailed_summary: true
        annotate_only: true      

    - name: "Check coverage.xml exists"
      if: always()
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: "coverage.xml"
      

    - name: Code Coverage Report
      if: steps.check_files.outputs.files_exists == 'true'
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "coverage.xml"
        badge: true
        fail_below_min: true
        format: markdown
        output: both
        thresholds: '70 80'
        

    - name: Append coverage to summary
      if: always()
      id: append-coverage
      run: |
        if [[ -f code-coverage-results.md ]]; then
          cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY || echo "Missing coverage report"
        fi
